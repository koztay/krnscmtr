version: "3.3"

volumes:
  postgres_data: {}
  postgres_backup: {}
  static-data: {}
  caddy: {}
  production_traefik: {}

services:
  postgres:
    restart: always
    build: ./compose/postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env
    networks:
      - main

  django: &django
    restart: always
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: karnas/django
    container_name: django
    user: django
    depends_on:
      - postgres
      - redis
    volumes:
      - static-data:/static_root
    command: /gunicorn.sh
    env_file: .env
    networks:
      - main

  #  nginx:
  #    restart: always
  #    build: ./compose/nginx
  #    container_name: nginx
  #    depends_on:
  #      - django
  #    volumes:
  #      - static-data:/static_root
  #    volumes_from:
  #      - django
  #    ports:
  #      - "0.0.0.0:80:80"
  #      - "0.0.0.0:443:443"

  # caddy:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: ./compose/caddy/Dockerfile
  #   depends_on:
  #     - django
  #   volumes:
  #     - caddy:/root/.caddy
  #   env_file: .env
  #   ports:
  #     - "0.0.0.0:80:80"
  #     - "0.0.0.0:443:443"

  redis:
    restart: always
    image: redis:latest
    container_name: redis
    networks:
      - main

  traefik:
    build:
      context: .
      dockerfile: ./compose/traefik/Dockerfile
    image: karnas_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    networks:
      - main

networks:
  main:
    driver: bridge
